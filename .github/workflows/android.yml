name: Android Stage Build & Deploy

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    name: Build Signed APK
    runs-on: ubuntu-latest
    environment: staging
    
    steps:
    - uses: actions/checkout@v3
    - name: set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: gradle
    - name: Decode keystore file
      id: decode_keystore
      uses: timheuer/base64-to-file@v1.2
      with:
        fileName: 'qa_key.jks'
        fileDir: './app/'
        encodedString: ${{ secrets.STAGING_ENCRYPTED_KEY_STORE }}
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Build with Gradle
      run: ./gradlew app:bundleDemoStaging
      env:
          STAGING_ALIAS: ${{ secrets.STAGING_ALIAS }}
          STAGING_PASSWORD: ${{ secrets.STAGING_PASSWORD }}
    - name: Check for file
      id: file_check
      run: |
        pwd
        if find . -type f -name "*.aab"; then
        echo "check_result=true" >> $GITHUB_OUTPUT
        else
        echo "check_result=false" >> $GITHUB_OUTPUT
        fi
    - name: Mark github workspace as safe
      run: |
        git config --global --add safe.directory /github/workspace
    - name: Decode service account credentials file
      id: decode_google_credentials
      uses: timheuer/base64-to-file@v1.2
      with:
        fileName: 'easy-dictionary-staging-credentials.json'
        fileDir: './app/'
        encodedString: ${{ secrets.STAGING_GOOGLE_CREDENTIALS }}
    - name: upload to Firebase App Distribution
      run: ./gradlew appDistributionUploadDemoStaging
      env:
        FIREBASE_TOKEN: ${{secrets.STAGING_FIREBASE_TOKEN}}
